<?xml version="1.0" encoding="UTF-8"?>
<syntax name="stencil" subsyntax="true">
	<meta>
		<name>Stencil</name>
		<type>markup</type>
	</meta>

	<indentation>
		<increase>
			<expression>^\s*&lt;(([^!/?]|%)(?!.+?([/%]&gt;|&lt;/.+?&gt;))|[%!]--\s*$)</expression>
		</increase>
		<decrease>
			<expression>^\s*(&lt;/[^&gt;]+&gt;|--&gt;|--%&gt;)</expression>
		</decrease>
	</indentation>

	<comments>
		<multiline>
			<starts-with>
				<expression>{% comment %}</expression>
			</starts-with>
			<ends-with>
				<expression>{% endcomment %}</expression>
			</ends-with>
		</multiline>
	</comments>

	<brackets>
		<pair open="{" close="}" />
		<pair open="[" close="]" />
		<pair open="(" close=")" />
	</brackets>

	<surrounding-pairs>
		<pair open="&lt;" close="&gt;" />
		<pair open="{" close="}" />
		<pair open="[" close="]" />
		<pair open="(" close=")" />
		<pair open="&apos;" close="&apos;" />
		<pair open="&quot;" close="&quot;" />
		<pair open="`" close="`" />
	</surrounding-pairs>

	<scopes>
		<include syntax="self" collection="keywords" />
		<include syntax="self" collection="values" />
		<include syntax="self" collection="identifiers" />
		<include syntax="self" collection="syntax" />
		<include syntax="self" collection="definitions" />
	</scopes>
	
	<collections>
		<!-- Built-in Keywords -->
		<collection name="keywords">
			<scope name="stencil.keyword" spell-check="false">
				<strings prefix="(?&lt;!block|set)\s" suffix="\b" word-boundary="false">
					<string>if</string>
					<string>endif</string>
					<string>for</string>
					<string>in</string>
					<string>endfor</string>
					<string>extends</string>
					<string>block</string>
					<string>endblock</string>
					<string>empty</string>
					<string>elif</string>
					<string>else</string>
					<string>and</string>
					<string>not</string>
					<string>or</string>
					<string>filter</string>
					<string>endfilter</string>
					<string>include</string>
					<string>extends</string>
					<string>where</string>
				</strings>
			</scope>
		</collection>
		
		<!-- Values -->
		<collection name="values">
			<scope name="stencil.string.double-quoted">
				<starts-with>
					<expression>&quot;</expression>
					<capture number="0" name="stencil.string.double-quoted.delimiter" />
				</starts-with>
				<ends-with>
					<expression>&quot;|(?:(?&lt;!\\)$)</expression>
					<capture number="0" name="stencil.string.double-quoted.delimiter" />
				</ends-with>
				<subscopes>
					<scope name="stencil.string.double-quoted.escape">
						<expression>\\(?:\\|&quot;|n|r|t|b|f)</expression>
					</scope>
				</subscopes>
			</scope>
			<scope name="stencil.string.single-quoted">
				<starts-with>
					<expression>&apos;</expression>
					<capture number="0" name="stencil.string.single-quoted.delimiter" />
				</starts-with>
				<ends-with>
					<expression>&apos;|(?:(?&lt;!\\)$)</expression>
					<capture number="0" name="stencil.string.single-quoted.delimiter" />
				</ends-with>
				<subscopes>
					<scope name="stencil.string.single-quoted.escape">
						<expression>\\(?:\\|&apos;|n|r|t|b|f)</expression>
					</scope>
				</subscopes>
			</scope>
			<scope name="stencil.value.null">
				<strings>
					<string>nil</string>
					<string>null</string>
					<string>blank</string>
				</strings>
			</scope>
			<scope name="stencil.value.boolean">
				<strings>
					<string>true</string>
					<string>false</string>
				</strings>
			</scope>
			<scope name="stencil.value.number">
				<expression>\b\-?(?:\d+(?:\.\d*)?|(?:\.\d+))\b</expression>
			</scope>
		</collection>
		
		<!-- Identifiers -->
		<collection name="identifiers">
			<!-- Properties in {} -->
			<scope name="stencil.identifier">
				<expression>\b([a-zA-Z_][A-Za-zÀ-ÖØ-öø-ÿ0-9_]*)(\s*\:\s*)</expression>
				<capture number="1" name="stencil.identifier.property" />
			</scope>
			<!-- Object.properties -->
			<scope name="stencil.identifier">
				<expression>(\s*\.\s*)([a-zA-Z_][A-Za-zÀ-ÖØ-öø-ÿ0-9_]*)(?!\()\b</expression>
				<capture number="2" name="stencil.identifier.property" />
			</scope>
			<!-- Methods -->
			<scope name="stencil.identifier">
				<expression>(\s*\.\s*)([a-zA-Z_][A-Za-zÀ-ÖØ-öø-ÿ0-9_]*)(?=\()\b</expression>
				<capture number="2" name="stencil.identifier.method" />
			</scope>
			<!-- Filters -->
			<scope name="stencil.identifier">
				<expression>(\s*\|\s*)([a-zA-Z_][A-Za-zÀ-ÖØ-öø-ÿ0-9_]*)\b</expression>
				<capture number="2" name="stencil.identifier.method" />
			</scope>
			<!-- Functions -->
			<scope name="stencil.identifier.function">
				<expression>\b(?&lt;!\.)([a-zA-Z_][A-Za-zÀ-ÖØ-öø-ÿ0-9_]*)(?=\()\b</expression>
			</scope>
			<!-- Tests -->
			<scope name="stencil.identifier.function" spell-check="false">
				<strings prefix="\b" suffix="\b" word-boundary="false">
					<string>where</string>
					<string>where_exp</string>
					<string>find</string>
					<string>find_exp</string>
					<string>group_by</string>
					<string>group_by_exp</string>
				</strings>
			</scope>
			<!-- Regular Identifiers -->
			<scope name="stencil.identifier">
				<expression>\b[a-zA-Z_][A-Za-zÀ-ÖØ-öø-ÿ0-9_]*\b</expression>
			</scope>
		</collection>
		
		<!-- Syntax -->
		<collection name="syntax">
			<scope name="stencil.bracket">
				<expression>[\(\[\{\)\]\}]</expression>
			</scope>
			<scope name="stencil.operator">
				<expression>(\+|\-|\*|\/|\%|\/\/|\*\*|\=|\~|\&amp;|\^|\=\=|\!\=|&lt;|&gt;|&gt;\=|&lt;\=|\.\.|\?|\?\:|\?\?|\:)</expression>
			</scope>
			<scope name="stencil.comma">
				<expression>,</expression>
			</scope>
		</collection>
		
		<!-- Definitions -->
		<collection name="definitions">
			<scope name="stencil.definition.variable">
				<symbol type="variable" scope="global" />
				<expression>(?&lt;=set)\s+([a-zA-Z_][A-Za-zÀ-ÖØ-öø-ÿ0-9_]*)\s*(\=)</expression>
				<capture number="1" name="stencil.identifier.name" />
				<capture number="2" name="stencil.operator" />
			</scope>
			<scope name="stencil.definition.function">
				<symbol type="function" scope="global">
					<context behavior="subtree" foldable="false" />
				</symbol>
				<starts-with>
					<expression>(?&lt;=macro)\s+([a-zA-Z_][A-Za-zÀ-ÖØ-öø-ÿ0-9_]*)</expression>
					<capture number="1" name="stencil.identifier.function.name" />
				</starts-with>
				<ends-with>
					<expression>(?&lt;=\%\})</expression>
				</ends-with>
				<subscopes>
					<include syntax="self" collection="arguments" />
				</subscopes>
			</scope>
		</collection>
		
		<!-- Arguments (used in definitions) -->
	  <collection name="arguments">
			<scope name="stencil.arguments">
				 <starts-with>
					  <expression>\(</expression>
					  <capture number="0" name="stencil.bracket" />
				 </starts-with>
				 <ends-with>
					  <expression>\)</expression>
					  <capture number="0" name="stencil.bracket" />
				 </ends-with>
				 <subscopes>
					  <scope name="stencil.identifier.argument.name">
							<symbol type="argument" />
							<expression>(?&lt;!\=)\b[a-zA-Z_][A-Za-zÀ-ÖØ-öø-ÿ0-9_]*\b</expression>
					  </scope>
					  <include syntax="self" collection="values" />
					  <include syntax="self" collection="syntax" />
				 </subscopes>
			</scope>
	  </collection>
	</collections>
</syntax>
